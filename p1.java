package univ;

public class p1 {
	public static void main(String[] args) {
		/*  자바란 무엇일까?
			자바는 썬 마이크로 시스템즈 사에서 1995년에 공식 발표한 객체지향 프로그래밍 언어이다.
			
			자바의 역사
			1. 썬 마이크로시스템즈 사가 1990년 초 양방향 TV를 만드는 제어박스의 개발을 위한 그린 프로젝트를 시작.
			2. 초기에는 객체지향 언어로 광범위하게 이용되고 있는 C++언어를 이용하지만 그것만으론 부족하여 C++ 언어를 기반으로 오크라는 언어를 개발함.
			3.  이 개발의 책임자인 제임스 고슬링이 오크 언어를 발전시켜 자바라는 범용적인 프로그래밍 언어를 개발함.
			
			자바의 특징
			1. 단순하다.
    			-C++언어를 기초로 만든 언어로 C++언어와 문법이 유사함.
    			-포인터를 이용하지 않고 메모리 관리가 보다 쉽고 편리함.
			2. 객체지향 언어이다.
    			-C언어는 함수를 프로그램 단위로 개발하는 절차적 언어.
    			-자바는 클래스를 프로그램 단위로 개발하며, 여러개의 클래스를 이용하여 하나의 프로그램이 실행됨.
    			-객체지향 프로그래밍 언어: 클래스와 클래스의 실례인 객체를 중심으로 프로그램을 개발
			3. 시스템에 독립적이다.
    			-하나의 플랫폼에서 만든 자바 프로그램은 다른 플랫폼에서도 다른 작업 없이 실행이 가능함.
			4. 번역 언어이다.
    			-자바의 프로그램 소스는 중간 코드인 바이트코드로 변환.
    			-바이트코드는 자바 가상 기계에서 인터프리터의 도움으로 실행됨. 
    			
			Java SE
			1.임베디드 환경, 개인용 컴퓨터, 서버에 활용될 자바 응용 프로그램을 개발하고 구현하는 기술.
			2.컴파일러, 실행환경, 클래스 라이브러리API를 제공.
			
			Java EE		
			1.다중계층의 대규모 기업 응용 시스템을 개발하기 위한 표준 플랫폼 제공.		
			2.기업 자바빈즈 컴포넌트, 자바 서블릿, 자바 서버페이지XML 기술에 필요한 자료 및 소프트웨어 제공.		
			​		
			Java ME		
			1.모바일 전화기 및 PDA, TV 셋탑박스, 이동 차량에 부착된 각종 장치 및 여러 임베디드 장치를 위한 자바 소형 플랫폼,		
			2. 메모리 및 여러 용량이 작은 장치 및 임베디드 장치를 위한 자바 기술 제공
				​		
			컴파일러 : 소스 파일에서 실행 파일을 생성하는 소프트웨어. (javac.exe)		
			바이트코드 : 자바 소스를 컴파일 하면 바이트 코드라 불리는 파일이 생성. (확장자 : class)		
			인터프리터 : 사람이 이해할 수 있는 고급언어로 작성된 코드를 한 단계씩 해석하여 실행시키는 방법 (java.exe)		
			컴파일과 인터프린터 과정 : 소스파일 -> 컴파일러 -> 바이트코드 -> 인터프리터 -> 실행결과
					​		
			JRE		
			-자바 API, 자바 가상 기계, 자바 프로그램을 실행하기 위한 여러 컴포넌트로 구성된 자바 실행 환경.
					
			JDK		
			-자바 언어를 이용하여 프로그램을 개발하기 위한 최소한의 환경		
			-개발도구 (컴파일러, 인터프리터, 디버거)와 JRE를 제공 
		 */
	}

}
